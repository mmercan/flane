version: '3.4'

services:
  Flane-Web-Arr:
    image: flane-web-arr:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Web.Arr\Dockerfile
    ports:
      - "8080"

  Flane-Web-STS:
    image: flane.web.sts:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Web.STS\Dockerfile
    ports:
      - "8081"

#signalR
  Flane-Web-Comms:
    image: flane-web-comms:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Web.Comms\Dockerfile  
    ports:
      - "8082"

    
  Flane-Web-CMS:
    image: flane-web-cms:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Web.CMS\Dockerfile 
    ports:
      - "8083"

  Flane.Web.Products:
    image: flane.web.products:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Web.Products\Dockerfile  
    ports:
      - "8084"

  Flane.Web.ClassRoster:
    image: flane.web.classroster:${FLANE_VERSION}
    build:
      target: develop-linux
      context: .
      dockerfile: Flane.Web.ClassRoster\Dockerfile 
    ports:
      - "8085"

  Flane.Web.Sales:
    image: flane.web.sales:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Web.Sales\Dockerfile    
    ports:
      - "8086"

  Flane.Web.B2B:
    image: flane.web.b2b:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Web.B2B\Dockerfile
    ports:
      - "8087"

  Flane.Web.Admin:
    image: flane.web.admin:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Web.Admin\Dockerfile   
    ports:
      - "8088"

  Flane.Api.Products:
    image: flane.api.products:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Api.Products\Dockerfile
    depends_on:
      - Flane-Db-Sql    
    ports:
      - "8089"

  Flane.Api.ClassRoster:
    image: flane.api.classroster:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Api.ClassRoster\Dockerfile
    depends_on:
      - Flane-Db-Sql    
    ports:
      - "8101"

  Flane.Api.Sales:
    image: flane.api.sales:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Api.Sales\Dockerfile
    depends_on:
      - Flane-Db-Sql    
    ports:
      - "8102"

  Flane.Api.News:
    image: flane.api.news:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Api.News\Dockerfile
    depends_on:
      - Flane-Db-Sql    
    ports:
      - "8103"

  Flane.Db.Mongo:
    image: flane.db.mongo:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Db.Mongo\Dockerfile 
    ports:
      - "8093"

  Flane-Db-Sql:
    image: flane.db.sql:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Sql.Database\Dockerfile  
    environment:
      sa_password: "Password1"
      ACCEPT_EULA: "Y"
      DATA_PATH: "C:\\data"
    ports:
      - "1433:1433" # REMARK: This is currently required, needs investigation
    healthcheck:
      test: [ "CMD", "sqlcmd", "-U", "sa", "-P", "Password1", "-Q", "select 1" ]
      interval: 1s
      retries: 30

  Flane.Db.Redis:
    image: flane.db.redis:${FLANE_VERSION}
    build:      
      context: .
      dockerfile: Flane.Db.Redis\Dockerfile  
    ports:
      - "8095"

  Flane.Db.Elasticsearch:
    image: flane.db.elasticsearch:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Db.Elasticsearch\Dockerfile  
    ports:
      - "8096"

  Flane.Queue.Nats:
    image: flane.queue.nats:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Queue.Nats\Dockerfile     
    ports:
      - "8097"

  Flane.Handlers.Sales:
    image: flane.handlers.sales:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Handlers.Sales\Dockerfile    
    depends_on:
      - Flane-Db-Sql    
    ports:
      - "8098"

  Flane.Handles.Product:
    image: flane.handles.product:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Handles.Product\Dockerfile    
    depends_on:
      - Flane-Db-Sql    
    ports:
      - "8099"

  Flane.Mon.Kinaba:
    image: flane.mon.kinaba:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Mon.Kinaba\Dockerfile    
    depends_on:
      - Flane-Db-Sql    
    ports:
      - "8101"

  Flane.Mon.Prometheus:
    image: flane.mon.prometheus:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Mon.Prometheus\Dockerfile
    depends_on:
      - Flane-Db-Sql    
    ports:
      - "8102"

  Flane.Comm.MailServer:
    image: flane.comm.mailserver:${FLANE_VERSION}
    build:
      context: .
      dockerfile: Flane.Comm.MailServer\Dockerfile
    depends_on:
      - Flane-Db-Sql    
    ports:
      - "8103"



networks:
  default:
    external:
      name: nat